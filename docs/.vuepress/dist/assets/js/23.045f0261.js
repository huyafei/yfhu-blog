(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{301:function(s,a,t){"use strict";t.r(a);var n=t(6),v=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"java基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java基础"}},[s._v("#")]),s._v(" Java基础")]),s._v(" "),a("h2",{attrs:{id:"java基本结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java基本结构"}},[s._v("#")]),s._v(" Java基本结构")]),s._v(" "),a("p",[s._v("一个完整的java程序：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * （javadoc注释，写在这里的注释信息会被JDKbin\n * 目录下的javadoc.exe工具提取并生成帮助文档）\n * HelloWorld.java\n */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloWorld")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 单行注释")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 多行注释\n      注释内容\n      注释结束 */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('**\n * （javadoc注释，写在这里的注释信息会被JDKbin\n * 目录下的javadoc.exe工具提取并生成帮助文档）\n * HelloWorld.java\n */\n关键字 关键字 类名标识符 {\n  // 单行注释\n  关键字 关键字 关键字 方法名标识符(关键字[] 参数标识符) {\n    System.out.println("Hello World!");\n      /* 多行注释\n      注释内容\n      注释结束 */\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("Java是面向对象的语言，一个程序的基本单位就是 "),a("code",[s._v("class")]),s._v("，"),a("code",[s._v("class")]),s._v(" 是关键字，这里定义的 "),a("code",[s._v("class")]),s._v(" 类的名字就是 HelloWorld：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloWorld")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 类名是 HelloWorld")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// class定义结束")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("类名要求：")]),s._v(" "),a("ul",[a("li",[s._v("类名必须以英文字母开头，后接字母，数字和下划线"),a("code",[s._v("_")]),s._v("的组合")]),s._v(" "),a("li",[s._v("一般以大写字母开头，驼峰命名法")])]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("ul",[a("li",[s._v("good\n"),a("ul",[a("li",[s._v("HelloWorld")]),s._v(" "),a("li",[s._v("NoteBook")]),s._v(" "),a("li",[s._v("...")])])]),s._v(" "),a("li",[s._v("bad\n"),a("ul",[a("li",[s._v("hello_world")]),s._v(" "),a("li",[s._v("notebook")]),s._v(" "),a("li",[s._v("123HelloWorld")]),s._v(" "),a("li",[s._v("HelloWorld_123")]),s._v(" "),a("li",[s._v("...")])])])]),s._v(" "),a("p",[a("code",[s._v("public")]),s._v(" 修饰符表示类的访问权限，"),a("code",[s._v("public")]),s._v(" 表示该 "),a("code",[s._v("class")]),s._v(" 是公开的，不写 "),a("code",[s._v("public")]),s._v(" 则默认为 "),a("code",[s._v("private")]),s._v("  私有的，\n只能在当前文件中使用，不能在其他文件中使用。")]),s._v(" "),a("p",[s._v("一个源文件中可以有多个 "),a("code",[s._v("class")]),s._v(" 类，但是一个 "),a("code",[s._v("class")]),s._v(" 类只能有一个 "),a("code",[s._v("public")]),s._v(" 的类， 并且要求此 "),a("code",[s._v("类名")]),s._v(" 必须和 "),a("code",[s._v("java源文件名")]),s._v(" 保持一致。如下：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// HelloWorld.java")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloWorld")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" person "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" cart "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("一个源文件中有多个 "),a("code",[s._v("class")]),s._v(" 类时，在编译的时候一个"),a("code",[s._v("class")]),s._v(" 会编译生成一个 "),a("code",[s._v("class")]),s._v(" 字节码程序文件，一般规范化写法一个 java 源文件只定义一个 "),a("code",[s._v("class")]),s._v(" 类，")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("class")]),s._v(" 内部，可以定义若干方法（method）：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// HelloWorld.java")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloWorld")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法名是main")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Preson")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法名是main")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Preson"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cart")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法名是main")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Cart"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("上面的示例中定义的 是 "),a("code",[s._v("main")]),s._v(" 方法名，返回值是 "),a("code",[s._v("viod")]),s._v(" 表示没有任何返回值， "),a("code",[s._v("public")]),s._v(" 修饰符可以修饰 "),a("code",[s._v("class")]),s._v(" 外，也可以修饰方法，\n而关键字 "),a("code",[s._v("static")]),s._v(" 是另一个修饰符，它表示静态方法。")]),s._v(" "),a("p",[s._v("在 Java 中以 "),a("code",[s._v("main")]),s._v(" 命名的方法示为主方法，在 "),a("code",[s._v("class")]),s._v(" 中定义 "),a("code",[s._v("main")]),s._v(" 方法（主方法），示作为程序的入口，\n也就是说任何一个class中都可以写 "),a("code",[s._v("main")]),s._v(" 方法（主方法），想从哪个入口进去执行，则让类加载器先加载对应的类即可。 例如：\n想让A类中的main方法执行，则执行：java A，想让B类中的main方法执行，则执行：java B。但实际上，对于一个完整的独立的应用来说，只需要提供一个入口，也就是说只需要定义一个main方法即可。")]),s._v(" "),a("p",[a("strong",[s._v("备注：")])]),s._v(" "),a("ul",[a("li",[s._v("java入口程序必需是静态方法 【static 修饰】")]),s._v(" "),a("li",[s._v("方法名必须为 main")]),s._v(" "),a("li",[s._v("参数必须是String数组 【String[] args】")]),s._v(" "),a("li",[s._v("方法返回值必须是void 【void】")])]),s._v(" "),a("p",[s._v("方法名也有命名规则，命名和class一样，但是首字母小写例如：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("good")]),s._v(" "),a("ul",[a("li",[s._v("main")]),s._v(" "),a("li",[s._v("goodMorning")]),s._v(" "),a("li",[s._v("playVR")])])]),s._v(" "),a("li",[a("p",[s._v("bad")]),s._v(" "),a("ul",[a("li",[s._v("Main")]),s._v(" "),a("li",[s._v("good123")]),s._v(" "),a("li",[s._v("good_morning")]),s._v(" "),a("li",[s._v("_playVR")])])])]),s._v(" "),a("h2",{attrs:{id:"标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[s._v("#")]),s._v(" 标识符")]),s._v(" "),a("p",[s._v("标识符就是程序员自己规定的代表一定含义的单词（java源程序当中凡是程序员自己有权利修改的名字），比如类名，属性名，变量名等。")]),s._v(" "),a("p",[a("strong",[s._v("Java标识符命名规则：")])]),s._v(" "),a("ul",[a("li",[s._v("标识符只能由数字、字母、下划线"),a("code",[s._v("_")]),s._v(" 、美元符号 "),a("code",[s._v("$")]),s._v(" 组成，不能含有其它符号。")]),s._v(" "),a("li",[s._v("标识符不能以数字开始。")]),s._v(" "),a("li",[s._v("java关键字和保留字不能作为标识符。")]),s._v(" "),a("li",[s._v("标识符严格区分大小写。")])]),s._v(" "),a("p",[a("strong",[s._v("Java标识符命名规范：")])]),s._v(" "),a("ul",[a("li",[s._v("见名知意。（看到这个单词就知道它表示什么）")]),s._v(" "),a("li",[s._v("遵循驼峰命名方式。（单词界线更明确）")]),s._v(" "),a("li",[s._v("类名、接口名首字母大写，后面每个单词首字母大写。")]),s._v(" "),a("li",[s._v("变量名、方法名首字母小写，后面每个单词首字母大写。")]),s._v(" "),a("li",[s._v("常量名全部大写，单词和单词之间使用 "),a("code",[s._v("_")]),s._v(" 衔接。")])]),s._v(" "),a("h2",{attrs:{id:"关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[s._v("#")]),s._v(" 关键字")]),s._v(" "),a("p",[s._v("关键字是Java编程语言中内置事先定义好的一些特殊的标识符，它们是用来标识程序的一些特殊的功能的，不能用作变量名、方法名、类名、包名和参数等。例如：")]),s._v(" "),a("ul",[a("li",[s._v("abstract：表明类或者成员方法具有抽象属性")]),s._v(" "),a("li",[s._v("assert：断言，用来进行程序调试")]),s._v(" "),a("li",[s._v("boolean：基本数据类型之一，声明布尔类型的关键字")]),s._v(" "),a("li",[s._v("break：提前跳出一个块")]),s._v(" "),a("li",[s._v("byte：基本数据类型之一，字节类型")]),s._v(" "),a("li",[s._v("case：用在switch语句之中，表示其中的一个分支")]),s._v(" "),a("li",[s._v("catch：用在异常处理中，用来捕捉异常")]),s._v(" "),a("li",[s._v("char：基本数据类型之一，字符类型")]),s._v(" "),a("li",[s._v("class：声明一个类")]),s._v(" "),a("li",[s._v("const：保留关键字，没有具体含义")]),s._v(" "),a("li",[s._v("continue：回到一个块的开始处")]),s._v(" "),a("li",[s._v("default：默认，例如，用在switch语句中，表明一个默认的分支。Java8 中也作用于声明接口函数的默认实现")]),s._v(" "),a("li",[s._v("do：用在do-while循环结构中")]),s._v(" "),a("li",[s._v("double：基本数据类型之一，双精度浮点数类型")]),s._v(" "),a("li",[s._v("else：用在条件语句中，表明当条件不成立时的分支")]),s._v(" "),a("li",[s._v("enum：枚举")]),s._v(" "),a("li",[s._v("extends：表明一个类型是另一个类型的子类型。对于类，可以是另一个类或者抽象类；对于接口，可以是另一个接口")]),s._v(" "),a("li",[s._v("final：用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量")]),s._v(" "),a("li",[s._v("finally：用于处理异常情况，用来声明一个基本肯定会被执行到的语句块")]),s._v(" "),a("li",[s._v("float：基本数据类型之一，单精度浮点数类型")]),s._v(" "),a("li",[s._v("for：一种循环结构的引导词")]),s._v(" "),a("li",[s._v("goto：保留关键字，没有具体含义")]),s._v(" "),a("li",[s._v("if：条件语句的引导词")]),s._v(" "),a("li",[s._v("implements：表明一个类实现了给定的接口")]),s._v(" "),a("li",[s._v("import：表明要访问指定的类或包")]),s._v(" "),a("li",[s._v("instanceof：用来测试一个对象是否是指定类型的实例对象")]),s._v(" "),a("li",[s._v("int：基本数据类型之一，整数类型")]),s._v(" "),a("li",[s._v("interface：接口")]),s._v(" "),a("li",[s._v("long：基本数据类型之一，长整数类型")]),s._v(" "),a("li",[s._v("native：用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的")]),s._v(" "),a("li",[s._v("new：用来创建新实例对象")]),s._v(" "),a("li",[s._v("package：包")]),s._v(" "),a("li",[s._v("private：一种访问控制方式：私用模式")]),s._v(" "),a("li",[s._v("protected：一种访问控制方式：保护模式")]),s._v(" "),a("li",[s._v("public：一种访问控制方式：共用模式")]),s._v(" "),a("li",[s._v("return：从成员方法中返回数据")]),s._v(" "),a("li",[s._v("short：基本数据类型之一,短整数类型")]),s._v(" "),a("li",[s._v("static：表明具有静态属性")]),s._v(" "),a("li",[s._v("strictfp：用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范")]),s._v(" "),a("li",[s._v("super：表明当前对象的父类型的引用或者父类型的构造方法")]),s._v(" "),a("li",[s._v("switch：分支语句结构的引导词")]),s._v(" "),a("li",[s._v("synchronized：表明一段代码需要同步执行")]),s._v(" "),a("li",[s._v("this：指向当前实例对象的引用")]),s._v(" "),a("li",[s._v("throw：抛出一个异常")]),s._v(" "),a("li",[s._v("throws：声明在当前定义的成员方法中所有需要抛出的异常")]),s._v(" "),a("li",[s._v("transient：声明不用序列化的成员域")]),s._v(" "),a("li",[s._v("try：尝试一个可能抛出异常的程序块")]),s._v(" "),a("li",[s._v("void：声明当前成员方法没有返回值")]),s._v(" "),a("li",[s._v("volatile：表明两个或者多个变量必须同步地发生变化")]),s._v(" "),a("li",[s._v("while：用在循环结构中")])]),s._v(" "),a("h2",{attrs:{id:"public-class-和-class的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-class-和-class的区别"}},[s._v("#")]),s._v(" public class 和 class的区别")]),s._v(" "),a("ul",[a("li",[s._v("一个java源文件当中可以定义多个 class")]),s._v(" "),a("li",[s._v("一个java源文件当中 public 的 class 不是必须的")]),s._v(" "),a("li",[s._v("一个class会定义生成一个 xxx.class 字节码文件")]),s._v(" "),a("li",[s._v("一个java源文件当中定义公开的类的话，只能有一个，并且该类名称必须和java源文件名称一致。")]),s._v(" "),a("li",[s._v("每一个class当中都可以编写 main 方法，都可以设定程序的入口，想执行 B.class 中的 main 方法：java B，\n想执行 X.class 当中的 main 方法：java X")])])])}),[],!1,null,null,null);a.default=v.exports}}]);